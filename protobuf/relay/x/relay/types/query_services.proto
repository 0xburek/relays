syntax = "proto3";
package relay;

option go_package = "relay/types";

import "x/relay/types/querier.proto";

message EmptyParams {}

service Query {
  rpc IsAncestor(QueryParamsIsAncestor) returns (QueryResIsAncestor) {}
  rpc GetRelayGenesis(EmptyParams) returns (QueryResGetRelayGenesis) {}
  rpc GetLastReorgLCA(EmptyParams) returns (QueryResGetLastReorgLCA) {}
  rpc GetBestDigest(EmptyParams) returns (QueryResGetBestDigest) {}
  rpc FindAncestor(QueryParamsFindAncestor) returns (QueryResFindAncestor) {}
  rpc HeaviestFromAncestor(QueryParamsHeaviestFromAncestor) returns (QueryResHeaviestFromAncestor) {}
  rpc IsMostRecentCommonAncestor(QueryParamsIsMostRecentCommonAncestor) returns (QueryResIsMostRecentCommonAncestor) {}
  rpc GetRequest(QueryParamsGetRequest) returns (QueryResGetRequest) {}
  rpc CheckRequests(QueryParamsCheckRequests) returns (QueryResCheckRequests) {}
  rpc CheckProof(QueryParamsCheckProof) returns (QueryResCheckProof) {}
}
